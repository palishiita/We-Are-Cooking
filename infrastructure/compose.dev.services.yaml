services:

  test:
    container_name: "wrc-test"
    image: wrc-rest-test:latest
    ports:
      - "$BACKEND_TEST_PORT:8080"
    networks:
      - wrcNetwork

  recipesapi:
    container_name: "wrc-recipesapi"
    build:
      context: ../services/RecipesAPI/RecipesAPI
      dockerfile: RecipesAPI/Dockerfile
    ports:
      - "7140:8080" # external:internal
      - "7141:8081"
    environment:
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_Kestrel__Endpoints__Https__Url=https://+:8081
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Path=${CERT_PATH}
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Password=${CERT_PASSWORD}
      #- ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - ./https-recipesapi:/https-recipesapi:ro
      - ../services/RecipesAPI/RecipesAPI/RecipesAPI/Database:/app/Database:ro
    networks:
      - wrcNetwork

  redis:
    container_name: "wrc-redis"
    build:
      context: ../services/redis
    ports:
      - "6379:6379"
    networks:
      - wrcNetwork
      
networks:
  wrcNetwork:
    name: wrcNetwork
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24